{{ if .Values.spec.vpa.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: goldilocks-{{.Values.spec.destination.clustername}}
  namespace: argocd
spec:
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
      - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
    retry:
      limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
  destination:
    namespace: {{.Values.spec.destination.project}}
    server: {{.Values.spec.destination.server}}
  project: {{.Values.spec.destination.project}}
  source:
    chart: goldilocks
    repoURL: https://charts.fairwinds.com/stable
    targetRevision: 3.2.3
    helm:
      values: |
        # uninstallVPA -- Enabling this flag will remove a vpa installation that was previously managed with this chart. It is considered deprecated and will be removed in a later release.
          uninstallVPA: false

          vpa:
            # vpa.enabled -- If true, the vpa will be installed as a sub-chart
            enabled: true

          metrics-server:
            # metrics-server.enabled -- If true, the metrics-server will be installed as a sub-chart
            enabled: false
            apiService:
              create: true

          image:
            # image.repository -- Repository for the goldilocks image
            repository: quay.io/fairwinds/goldilocks
            # image.tag -- The goldilocks image tag to use
            tag: v3.1.4
            # image.pullPolicy -- imagePullPolicy - Highly recommended to leave this as `Always`
            pullPolicy: Always

          nameOverride: ""
          fullnameOverride: ""

          controller:
            # controller.enabled -- Whether or not to install the controller deployment
            enabled: true
            rbac:
              # controller.rbac.create -- If set to true, rbac resources will be created for the controller
              create: true
            serviceAccount:
              # controller.serviceAccount.create -- If true, a service account will be created for the controller. If set to false, you must set `controller.serviceAccount.name`
              create: true
              # controller.serviceAccount.name -- The name of an existing service account to use for the controller. Combined with `controller.serviceAccount.create`
              name:

            # controller.flags -- A map of additional flags to pass to the controller
            flags: {}
            # controller.logVerbosity -- Controller log verbosity. Can be set from 1-10 with 10 being extremely verbose
            logVerbosity: "2"
            # controller.nodeSelector -- Node selector for the controller pod
            nodeSelector: {}
            # controller.tolerations -- Tolerations for the controller pod
            tolerations: []
            # controller.affinity -- Affinity for the controller pods
            affinity: {}
            # controller.resources -- The resources block for the controller pods
            resources:
              limits:
                cpu: 25m
                memory: 32Mi
              requests:
                cpu: 25m
                memory: 32Mi
            # controller.podSecurityContext -- Defines the podSecurityContext for the controller pod
            podSecurityContext: {}
            # controller.securityContext -- The container securityContext for the controller container
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 10324
              capabilities:
                drop:
                  - ALL

            # controller.deployment.annotations -- Extra annotations for the controller deployment
            deployment:
              annotations: {}

          dashboard:
            # dashboard.enabled -- If true, the dashboard component will be installed
            enabled: true
            # dashboard.replicaCount -- Number of dashboard pods to run
            replicaCount: 2
            service:
              # dashboard.service.type -- The type of the dashboard service
              type: ClusterIP
              # dashboard.service.port -- The port to run the dashboard service on
              port: 80
              # dashboard.service.annotations -- Extra annotations for the dashboard service
              annotations: {}
            # dashboard.logVerbosity -- Dashboard log verbosity. Can be set from 1-10 with 10 being extremely verbose
            logVerbosity: "2"
            # dashboard.excludeContainers -- Container names to exclude from displaying in the Goldilocks dashboard
            excludeContainers: "linkerd-proxy,istio-proxy"
            rbac:
              # dashboard.rbac.create -- If set to true, rbac resources will be created for the dashboard
              create: true
            serviceAccount:
              # dashboard.serviceAccount.create -- If true, a service account will be created for the dashboard. If set to false, you must set `dashboard.serviceAccount.name`
              create: true
              # dashboard.serviceAccount.name -- The name of an existing service account to use for the controller. Combined with `dashboard.serviceAccount.create`
              name:

            # dashboard.deployment.annotations -- Extra annotations for the dashboard deployment
            deployment:
              annotations: {}

            ingress:
              # dashboard.ingress.enabled -- Enables an ingress object for the dashboard.
              enabled: false
              annotations: {}
                # kubernetes.io/ingress.class: nginx
              # kubernetes.io/tls-acme: "true"
              hosts:
                - host: chart-example.local
                  paths: []

              tls: []
              #  - secretName: chart-example-tls
              #    hosts:
              #      - chart-example.local

            # dashboard.resources -- A resources block for the dashboard.
            resources:
              limits:
                cpu: 25m
                memory: 32Mi
              requests:
                cpu: 25m
                memory: 32Mi
            # dashboard.podSecurityContext -- Defines the podSecurityContext for the dashboard pod
            podSecurityContext: {}
            # dashboard.securityContext -- The container securityContext for the dashboard container
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 10324
              capabilities:
                drop:
                  - ALL
            nodeSelector: {}
            tolerations: []
            affinity: {}
{{- end }}
