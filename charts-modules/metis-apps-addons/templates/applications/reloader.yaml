{{ if .Values.spec.reloader.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: reloader-{{ .Values.spec.destination.clustername }}
  namespace: argocd
spec:
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
      - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
    retry:
      limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
  destination:
    namespace: {{ .Values.spec.destination.project }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.destination.project }}
  source:
    chart: reloader
    repoURL:  https://stakater.github.io/stakater-charts
    targetRevision:  v0.0.50
    helm:
      values: |
        global:
          ## Reference to one or more secrets to be used when pulling images
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
          ##
          imagePullSecrets: []
          # - name: "image-pull-secret"

        kubernetes:
          host: https://kubernetes.default

        reloader:
          isOpenshift: false
          ignoreSecrets: false
          ignoreConfigMaps: false
          watchGlobally: true
          # Set to true if you have a pod security policy that enforces readOnlyRootFilesystem
          readOnlyRootFileSystem: false
          matchLabels: {}
          deployment:
            nodeSelector:
              role: add-ons-platform
            # cloud.google.com/gke-nodepool: default-pool

            # An affinity stanza to be applied to the Deployment.
            # Example:
            #   affinity:
            #     nodeAffinity:
            #       requiredDuringSchedulingIgnoredDuringExecution:
            #         nodeSelectorTerms:
            #         - matchExpressions:
            #           - key: "node-role.kubernetes.io/infra-worker"
            #             operator: "Exists"
            affinity: {}

            # A list of tolerations to be applied to the Deployment.
            # Example:
            #   tolerations:
            #   - key: "node-role.kubernetes.io/infra-worker"
            #     operator: "Exists"
            #     effect: "NoSchedule"
            tolerations:
              - key: "addOnsPlatform"
                operator: "Exists"
                effect: "NoSchedule"

            annotations: {}
            labels:
              provider: stakater
              group: com.stakater.platform
              version: v0.0.50
            # Support for extra environment variables.
            env:
              # Open supports Key value pair as environment variables.
              open:
              # secret supports Key value pair as environment variables. It gets the values based on keys from default reloader secret if any.
              secret:
              # field supports Key value pair as environment variables. It gets the values from other fields of pod.
              field:

            # Specify resource requests/limits for the deployment.
            # Example:
            # resources:
            #   limits:
            #     cpu: "100m"
            #     memory: "512Mi"
            #   requests:
            #     cpu: "10m"
            #     memory: "128Mi"
            resources: {}
            # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
            securityContext: {}
            # runAsUser: 1000

          rbac:
            enabled: true
            labels: {}
          # Service account config for the agent pods
          serviceAccount:
            # Specifies whether a ServiceAccount should be created
            create: true
            labels: {}
            # The name of the ServiceAccount to use.
            # If not set and create is true, a name is generated using the fullname template
            name:
          # Optional flags to pass to the Reloader entrypoint
          # Example:
          #   custom_annotations:
          #     configmap: "my.company.com/configmap"
          #     secret: "my.company.com/secret"
          custom_annotations: {}


{{- end }}