{{ if .Values.spec.crossplane.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: crossplane-{{ .Values.spec.destination.clustername }}
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  syncPolicy: {}
{{/*    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.*/}}
{{/*      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).*/}}
{{/*      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).*/}}
{{/*      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).*/}}
{{/*    syncOptions:     # Sync options which modifies sync behavior*/}}
{{/*      - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).*/}}
{{/*      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.*/}}
{{/*      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.*/}}
{{/*      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation*/}}
{{/*    retry:*/}}
{{/*      limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0*/}}
{{/*      backoff:*/}}
{{/*        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")*/}}
{{/*        factor: 2 # a factor to multiply the base duration after each failed retry*/}}
{{/*        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy*/}}
  ignoreDifferences:
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      jsonPointers:
        - /webhooks
  destination:
    namespace:  {{ .Values.spec.destination.project }}
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.destination.project }}
  source:
    chart: crossplane
    repoURL:  https://charts.crossplane.io/stable
    targetRevision:  1.3.0
    helm:
      values: |
        replicas: 1
        deploymentStrategy: RollingUpdate

        leaderElection: true
        args: { }

        provider:
          packages: []

        imagePullSecrets:
          - dockerhub

        rbacManager:
          deploy: true
          replicas: 1
          managementPolicy: All
          leaderElection: true
          args: { }

        priorityClassName: ""

        resourcesCrossplane:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi

        packageCache:
          medium: ""
          sizeLimit: 5Mi
          pvc: ""

        resourcesRBACManager:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi

        alpha:
          oam:
            enabled: false

{{- end }}
